<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC "-//Hibernate/Hibernate Configuration DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
    <session-factory>
        <!-- Kullanılacak Veritabanı Sürücüsünün Adı       -->
        <!-- hibernate.connection.driver_class boyle yazilmak zorunda  -->
        <!-- org.postgresql.Driver postgreql icindeki Driver sinifi  -->
        <property name="hibernate.connection.driver_class">org.postgresql.Driver</property>

        <!--  ConnectionString baglanti yapacagimiz adres      -->
        <property name="hibernate.connection.url">jdbc:postgresql://localhost:5432/Kutuphane</property>

        <!--  Kullanıcı Adı , yetkili kullanıcı      -->
        <property name="hibernate.connection.username">postgres</property>

        <!--  Şifre      -->
        <property name="hibernate.connection.password">root</property>

        <!--  sql sorgularini neye gore cevireci ile alakali     -->
        <property name="hibernate.dialect">org.hibernate.dialect.PostgreSQL10Dialect</property>


        <!-- ******************** ONEMLI KISIM *****************
              update -> Entity lerinize bakar eğer bunlara karşılık gelen tablolar DB de var ise
                        olduğu gibi bırakır. Eğer tablolar yok ise varlıklara ait tabloları oluşturur.
              create -> Entity lerinize ait tüm tabloları, uygulama her başladığında tekrar tekrar oluşturur.
                        DİKKAT!! bir uygulamada create kullanılır ise veritabanında olan veriler tamamen silinir.
              create/drop -> Her seferinde tabolar oluşturulur, uygulama kapatılırken tüm tablolar silinir.
         -->
        <property name="hibernate.hbm2ddl.auto">update</property>
        <!--  Hibernate bizim adımıza SQL komutlarını yazmaktadır, bu yazmakta olduğu SQL kodlarını
              konsol ekranında görebilmek için bunu aktif ederiz.
        -->
        <property name="hibernate.show_sql">true</property>
        <property name="hibernate.format_sql">true</property>


        <!--    sinifin yerini paket paket belritiyoruz
                Hibernate in haritalayacağı tüm Java Sınıflarını belirtiyoruz.
                DİKKAT!! kafanıza göre her sınıfı haritalayamazsınız. çünkü hibernate
                @Entity ile işaretlenmemiş hiç bir sınıfı kullanamaz.
        -->

        <mapping class="com.banu.repository.entity.Islem"></mapping>
        <mapping class="com.banu.repository.entity.Kitap"></mapping>
        <mapping class="com.banu.repository.entity.Uye"></mapping>
        <mapping class="com.banu.repository.entity.Yazar"></mapping>


    </session-factory>
</hibernate-configuration>